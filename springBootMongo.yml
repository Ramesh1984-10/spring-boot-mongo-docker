kind: ConfigMap
apiVersion: v1
metadata:
  name: springappconfigmap
data:
  username: springapp
  password: mongodb@123

---
apiVersion: v1
kind: Secret
metadata:
  name: aws-ecr-credentials
  namespace: default
data:
  .dockerconfigjson: ewoJImF1dGhzIjogewoJCSI2Mzc0MjMzNjUwNjMuZGtyLmVjci51cy1lYXN0LTEuYW1hem9uYXdzLmNvbSI6IHsKCQkJImF1dGgiOiAiUVZkVE9tVjVTbmRaV0d4ellqSkdhMGxxYjJsTlZVb3lUVVpWTUZWc1FsSmlSM2cwWVVWU1ZscFlWbWhSTTBFeVdsZEtjRkZZUms5V2FrNVFXakZzZVUxcVRubE9ibWhVWWxaVmNtTkdhSFJoUm14WFZERktibUpXVW1oYU1rWnlWV3RhZUZaV2FIZFRNamd5VmtoRmVscFZTVE5TUmtKeVVXeE9SVTVGYzNoamJWcDNWakJhV1dWdFpHeFRWM2h5VkZWRk1HTnBPVlZrVlhCc1ZXeGtVbUV4U1hwUFYxWjFXbFJGTldSVmMzbGhNbFl4VDFSSmVHUnVaSFZsUkdSeldtdDBVRll3UlhwaE1tc3lZbXhPU0ZFelVtOU5NVVkxWlVoa1VtUXdXbTlXVjJRd1lsVktkMXB0YUZGU2Vsa3pWVVZuTWt3elJYSk5ibFpOVDBWR01rMHljM2hrTTJ4UlRXdGtlazE2VGt4aFYzUlpXbTFrVVU0d1RuZFdWVEZJVWpOR1dXUlZTWGxaYm1oRVZUQjBRbE51VWtsalZFNUhUak5XUjJOSGRGQlhiRkozVWxaV2VWRnFVbFpVUmtwRVYwZFpNMU5XWjNwamJWRXlWRmhrWVUxdVVsVlNXRko2WkVWR1ZVMHljRzFSYW1SRVRWUkdSVTV0WkhWaFdFRTFTek5PV0ZremFIQldTR3hFVmxoa1RGWjZSVFZhVlRoNFlVUnNibGxzVmtsbGJrNVRUbFJDVFZKdVZrNWtWMmQzVlVjNU5XTnNaRzVaVkZwNFdUSTVNazVWVGs1a2JrbzJZekpPYkZOcVZsVk5NVVUwV2xac1ZWWlhWbmxhUjJkMlkwVTRNVlJ0WXpST1IxWkhUVmQzZUZaRVFraGpNbXhJWVRGcmNrNXVWa2RpTUdkeVkydDBkbVJIZEU1VWJHc3dUMFpzTWxONlZsZE5NVmt4VmtSbk5VNUdVa3BSTURreVVYcFNTMkZYVGpWVlZGSldWV3M0TVdScVZrNU9XRUV5WVVac01WWklWVEpWYWtwRVpWVTFhR0pIVWs5TE1tZzBTekJHVlZaSGJGWlBWM1J4VG5sMGNWZFhTbk5pVmxweVl6QldORlZYTlU1T1NHTnlWbFphZWs5V1pGQlJNRGxoVlZoc2VsbDVkRWxOTWpVMFkwVjBTMDFFU2t4VE1taHVVMGhhVWxWWE1VaGFNakY0WkdwYVUySXliRU5aYldSTlZsVk5NRm96UVhaYWJWRjZWbGRvYldScWFHeFNSWEJ1VXpCT2IySldTak5WTUc5NlZucEtTbGRYU205UFIzQXhZVmROTWxOdE1XbGhWVnBGVjFkS2VGUlZWbGhsYTFwRlZrTTVlV05yTVVoTmVsSkpVa1JzVlZWdFRsRlVlWFJ4UzNwS1QwOVRkRlJQVldSdlZrWk9iV051UmtKT2EzQnhVbXR6ZWsxWGNERmlhbHBNVWpKd2RtRlZlRFZUVlU1UldsWmFhRmRZV1hwYVZ6bFhUVlZvVjFFd2RIVlRNMnhIV201YVJtRXdVVFJoYTNCb1lURm9jRlZZU2pSWGFsWnNVa1ZzVDFORmNFaFZSM00xVGpKc01sVnFaREJpYlhSeVRWWnZNVlJGVmtoU2FsWmFVMVpaTVZac1ZrcGlWVGxoVW5rNVNsSkVhM1paYkdoWlUxVkthVmt3YUZaU01VcHJXVEJzYzJNeWREQk5hbEp2V1ZSU1ZtSXljek5PTWxaVVRrVk5kbGt4VlRKa1ZuQjJVakE0ZDAxRWFHcFhSa0pXVm14b1RsSjZXa05OTTJSVVYxUlpjbEpYZUdsU2FtaEpUbFpWZGxWWFVuSmpNMDVVVlhsME5XTkZhR3RQVnpsM1RVWk9NazFWZDNwVFJsVnlWMFJhVTJKVldUQlVNRlY0VmpCNGRWVldWbUZNZW1ScVUyMWpNMVV6VG5OT01rbDNUVWRTTVdGRlRteGpNVnBTVlc1S1JsSnVUWFprYTJoUFZHeHNlbE5zVm5oaE1XOHdZVEZPTm1WR2JHcFNiRm8yVmxSa1JGTlVhRkpqYm1odll6TkdSMDB3WkcxYVYzaDBUV3RhY2xWWVFuWlVNMUpxVTFocmQxSnVZM2hOVldoVVRESndVVnByVW01TWVsRnlUVlY0Tm1FelpHNWlTSEJ3VlZoQmVXUlVUVEZUUjBWNlYwaE9ibFpyTVc1TmJFWkRUVWRHYUZOVmNFTlRNRGxJWWxoT2RtSlZVazVaYkVaU1pWWkZlbE5YTVc5U01rcFJXakJLTkZVeWFHNWFSRVpYV2pKM01HRXdTbEZXYTBadFRXdFNlRXQ2YkRCVGJteHBUbFpXVkdSV2FGZGxSWEF3WkVac01sZEhhSFZaTUZaVFlVVjBkMk16YUU5a2JGSlVUVmRTTTFGcVZraGhTR2hMVjBjeFRVd3dhR3BYVlRGRFpXcFNUazFxVWs1bGFteFBVbGMwZUdSRVl6Vk1NMVpYVWxkd1UxSjVkRzVXV0ZWNVkyMVNRbE50ZDNaTlV6aDZVbGRrVUUxcWFETlBXRVpxVWtaQ2RGSXhRblJOUlRrMFZHeENWbVJYT1dGaGJURlZVbnBHUTA1R2NFSmliRzl5VDBob1dtUllaRzVTYm1SdVZrUlNSRlZHV2tsaFZrcFNaV3RTUlZkV1dYcGhNbXg2VWtaYWNWSklUa3hPTVdneVVrWmthbEpyV2xOa2JHeDJZMjVOZVZkSFZYcGpWM2h2WVVST1dVNUhkRFZoTTJoMldrWlNSR1ZIYUZOT1YzQjNZa1ZHVmxRd2NIQlRSRUpwV2taR2QyUnVVbTFMZWtWeVZURk9WV0ZHYUVSVWVtTjRZbFUxYWxOc2JFVmtha296Vlc1a1dXSldWbXhTTVdoUlRYcE5kMWRXYkZwVE1IY3hUVWN4YTFwRlNuUkxNRmt6VVRGR1VWTlhOV2hhTWxwV1RsVTVSMkl6VGt4UmJUaDNXVlJrYWsxdVFrbFdia3BOV2pGc1FrNVVXbXRhYlRWWlYydGtTV05zU2taYU1sSllUakZKZG1GcVRrZFNhMUp2WWtSc1JHUkVVa2RhVjA1M1ZVWktNazB5VWxwV1JVWTJVek53ZWxORk9WRk5WMHBYVlVoT1NHTlZOREphTVVKcFpVWlNTMU5FYUdwTlZsa3dZekZLTkZaVVNtMVdhbXhXWTFOMFVXUllVVEZVVlRsRldraFNXRkpZWjNaaGJsSkpaVWRvYTJRemF6RlJWWE4zVkhwS2RWUklWbXBXVkd4VlZVUnNhRkZ0UlRObFEzUjJXVlJaZDJOVVVqTk9NVTV1Wlc1YU1WTnVVazVTUjFKNFdtdEtWMVZGZURGV01VNU1Tek5uZVZaWVFsWlNhM1EwVERJMVRWbHRiRFJpU0U1VlRIcGFkMU50YTNsaWFtdDJWVzAxUm1GSFdsQmFNRGgyVWxad2JHSXdlRkpSV0U1eFdtNVdNMlJyT0ROVmJscE1WakZ3VDFKNll6TmpibEpMVFd0M05HUnNXa1JYU0VZMVQxZFdlVlV3Um14aFIyUnZUVEZhVW1Nd09WWk1NbU16WkcxU1dFOVlhRXhqUlVaNVpHc3dNbFV5Y0dGUmEwNTJWbGhuTWxSV1RtOVdibXh2Vmxaa1ExVllaR3BqYWtJMFZXcG5lbUV6UW5kaU0wcFdVMVpTYUZNelZtRmthMWw2WVZoV1UyRlZkRXRSTTA1RVVqQTFNVkpIVW5aYU0xSjRZVWRTVm1SRWEzcE1NMFpWWXpKV2JsWnVUbk5hUjBaRlltNWtTbGRGU2paVVZHaEdZbXh3UjAxR1JYZGhibEpxVW1wU2FXTnVSbkpTYkZKcFVrZHJNMVZYZEVObGFsWkpVbGM1VUZsdVVuVmhibFo2VkZSb1NsTnFTazlhYTNSWFdtNWFOR1ZGV25Ca01WSjZaVlZrV0ZKVk5EVldTRnBPWlVad1ZtUkhaRlpsVkdoTFVsZGFSMWRZY0d0a1ZWVXlZekp3VDFGWVdsVlNlVGxZVGxVNVNFNVhSa3BsUmxwdVdUSndNRnBYZDNkaFJHc3haSHBzUTJORlVqUldNR2hhWTJ4V1NsVllWbFJXYWtaRVRqQlplazFGYkhKV1ZUZzFXWHBXUjFWc1pGSmtSbWN6V1d4d1JHVkZjekphTTJSMVRVWm9lV1JIYkRWTk1qbERZbFJTYzFwWGJ6SldSa1pEVlVSV2FHRkZTalZoVld4eVZHNUdXbVJVVlhkVmFrcElWakI0VTFvelJtRmhXRkV5WkVkU2FFNXRhRFJUYlhSUVRrY3hjRk5HUlhaU1J6VXdWa1p2TkZWclRubGxSa3BhVTBWb2RGWlhWbFZXTTJSMlYxZDBVMUl6VGxSUlV6bEtWbGRTZUZwWFdYcE9SMUo0VGpCd1drNTZSblZhYWtwNlpGWktVMDFWT1hGaWFUbHdWMFphY2xSVlkzaGhWVEZhU3pKd05WcHJhREprTUhCTlZqSmFUbU5YZEVKUVZEQnBURU5LYTFsWVVtaGhNbFkxU1dwdmFWRldSa1pSYTBaSllVaGtkRTFHYkdoVFZrNUxXbFpLTUZOdE1ERmlha1pJVG01V2VGcFhWbkpYU0ZaMlYwWm9VVnBVVmxaU2JVNXNUMVpLZUU5RE9IaE9TR1JDVVZWR1NVNUlaRzFSVm14TFV6STVZVk5YYURKWk1EVkNWVmRPU0dJd1l6UmtNa3BTVTFWS1FsSkZTblpSYldSeVkxZG9jbUZWWXpWa2VrSkRVVzVrUm1Rd2FHNVhWWEJhVTFad1NsRldaRlpTUlVwQ1VsaFdUbEZyVmtaU1JUVlpXa1ZhVFZKcVduaFdiR1J6VTFSQ1ExTlZhRzVUVlVwR1UxVkZNMU15V21wV1ZUbGhUSHBHTldGVVVubGxiV3hDWTBSc2JXRXllRE5VTTBKRFRrWmFSVnBWU1hkaVYzaDBUbnBLV2xWWFVqTlJWR1J2VW01RmNsUllRazVoVm1kNVpIcEpNMDVzYkZCU1YwNTVaV3hXZVdWdFJtOVNiRmw0WVRCa2NFNUZTbTlXYXpsV1lub3dhVXhEU2pKYVdFcDZZVmM1ZFVscWIybE5hVWx6U1c1U05XTkhWV2xQYVVwRlVWWlNRbGd3ZEVaWFUwbHpTVzFXTkdOSGJIbFpXRkp3WWpJMGFVOXFSVE5OYWtsNFQwUnJOVTFVVWprPSIKCQl9Cgl9Cn0=
type: kubernetes.io/dockerconfigjson

---
apiVersion: v1
kind: Secret
metadata:
  name: springappsecrets
type: Opaque
stringData:   # We can define multiple key value pairs.
  password: devdb@123

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-hostpath
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
  - ReadWriteOnce
  hostPath:
    path: "/tmp/mongodata"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-hostpath
spec:
  storageClassName: manual
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---
## Spring Boot App
apiVersion: apps/v1
kind: Deployment
metadata:
  name: springappdeployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: springapp
  template:
    metadata:
      name: springapppod
      labels:
        app: springapp
    spec:
      containers:
      - name: springappcontainer
        image: 637423365063.dkr.ecr.us-east-1.amazonaws.com/java-spring-boot:latest-39
        ports:
        - containerPort: 8080
        env:
        - name: MONGO_DB_USERNAME
          valueFrom:
            configMapKeyRef:
              name: springappconfigmap
              key: username
        - name: MONGO_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: springappsecrets
              key: password
        - name: MONGO_DB_HOSTNAME
          value: mongo
      imagePullSecrets:
      - name: aws-ecr-credentials    
---
apiVersion: v1
kind: Service
metadata:
  name: springapp
spec:
  selector:
    app: springapp
  ports:
  - port: 80
    targetPort: 8080
  type: NodePort
---
# Mongo db pod with volumes(HostPath)
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: mongodbrs
spec:
  selector:
    matchLabels:
      app: mongodb
  template:
     metadata:
       name: mongodbpod
       labels:
         app: mongodb
     spec:
       volumes:
       - name: mongodb-pvc
         persistentVolumeClaim:
           claimName: pvc-hostpath
       containers:
       - name: mongodbcontainer
         image: mongo
         ports:
         - containerPort: 27017
         env:
         - name: MONGO_INITDB_ROOT_USERNAME
           valueFrom:
             configMapKeyRef:
               name: springappconfigmap
               key: username
         - name: MONGO_INITDB_ROOT_PASSWORD
           valueFrom:
             secretKeyRef:
               name: springappsecrets
               key: password
         volumeMounts:
         - name: mongodb-pvc
           mountPath: /data/db
---
apiVersion: v1
kind: Service
metadata:
  name: mongo
spec:
  type: ClusterIP
  selector:
    app: mongodb
  ports:
  - port: 27017
    targetPort: 27017
