kind: ConfigMap
apiVersion: v1
metadata:
  name: springappconfigmap
data:
  username: springapp
  password: mongodb@123

---
apiVersion: v1
kind: Secret
metadata:
  name: aws-ecr-credentials
  namespace: default
data:
  .dockerconfigjson: ewoJImF1dGhzIjogewoJCSI2Mzc0MjMzNjUwNjMuZGtyLmVjci51cy1lYXN0LTEuYW1hem9uYXdzLmNvbSI6IHsKCQkJImF1dGgiOiAiUVZkVE9tVjVTbmRaV0d4ellqSkdhMGxxYjJsYVIyUTBXa1pLUTFwclVqUmpXSEJvVERObmRtRklXVEZsU0doNlltdDRhMlZGVGtsWk1taHlVa2hhVGxkcmVESlNNREEwVjBSYVNVc3dTbkpXYW1odFZVaFNhRlF4V2toUlZYTTFVbGh2Y2s1dE5WTmtNSFJ5VlZWME1XTnJOV3hqTWxaQ1RrTnpNbGR0ZEZWaU0wWkpUbFZPVlZwNmF6QldSa1pyWTI1R1MyTlZXbGhTTWpWdVpXMWtSMDVYT1hSaU0wSXlaVVJhUlZZeU5VMVVSMUpwVkVkb1NsUnRaRU5TUjNSTlZFWk9URnBVWjNwU2Fsb3hXbFpGTlUxc2FFUlRhbHBFWWtaYVYyRkhPVTFhUnpGVFUydEdWbVZJY0ZsaWVscFNWVEI0UkZFeFRscGpVemxDWVVaUmNtRnRlRzFTYlZaT1ZtcGtOazFxUm5Ga1dFSlNWbFpvVDJKRVJtcGhlbFpEWTI1R1RWRnJTa2hqV0d4SVltdEdSMVpHYkU5TmJFSlFaRWhOY21NeGEzWmhNbmg2V2xob05XUnBPVlpqZW13elZsZHNObEpzU1ROaWVUa3haV3BOZUZreVVuRlVWa1pxVWxob2MxWlZlRVZPTW1ONllrVjRWV1F3VGxGamJFb3pZVVphZVZWc2FFbFpWVTE2VDFVd2RtUkZkRUpOTW1SeFdqSmFWRTB4U2xGWmJVNVNZV3hzUTFSck1YaFdia0pUWXpKa01XTXlkekJYYXpnd1RUQTVhV1ZZWkZOWmEwWjZWRVY0VlZKV1dUUmpiV1F4VmpCd1RFMHdTbmhXYTBwMVlXdDBhVTB6U2tWUFIyaHpZVWhXUkZFd1VtdFhiR3hFV2xaT00xUkZPVFJsUldSMVRtcEtTRlZzWjNsbFYyaE1ZVVJTY1UxRmVHaGxibWh5VXpOYWRrMVdXbTFPV0VKRllqSm9jbE5HUlRKa01WSlhZMVZTVVZWdGRHeFpiVTV5V1dwQ00xWnVRbEJaZWs0d1ZsYzVWV05ZWkROYVJWcEZaRmhLTVZOV1NqUmxhbFpvVlVVNWFsVXpZekZTYVhSMVZYcEtkbUpYZEd4bFIyeHhUVmh3ZDFkdVp6SmliR3hRVFVoU1NXVlhWa1psYlRWMFpGZE9ObVJ1UVROaGVrNVNVMnQwVjJJd01WcGphMUpvV2tob2MyVlVaRTVPVkd4SVZFaEdTRTFYWkVaYWJVcFZaVzVvYm1KRk5YUmlhM1F4VFZST1JGSlhSbkJUVjNReFUycEtTbFF3Y0d0WlYwcFJWVEZDTkdGdGFISlViRVpaVGtoQ1RrNVlVblpQUjBwVVRVVkdUbFl3VWxkU01HeGFUakZvZUdReVZuQmliVkYzWW0xbmVGZEVUWGxrU0dNMFVrVnNSbU5GYkhWa1NGWXhWMVp3YlU1WVJrdE9NVXA2VmpCa1lVMVVTblpXTVZrMVZWZDBkbEY1ZERCV2JrNVRVbE4wTUZwSVp6UlpNa1pDV1d0R1dsUnJjRzVqZW14MVUwaFNObFp0U2sxaWJHUnVUMVZOZVZvd2FIRlZlbVJJWlVaQ01XVnJhRmxTUjNoeFdUTlNNR0V5UlhoaU1WcE1UREpGZGxKdVRtMWxTRTVSVlZjMWExZERPVU5YYkZKUVUyNVdhVlF3ZUZSTU1tUlFZa1V4TTA5V1NUVmpiRlpMVjFoU1NXUXdNVTFOTVZKclZHMUdOa3N5TVVKT1ZFRXpVbGRTTkdSRVpISlVNamcxVTIxV2JrMXRUbEJWUjJ4dFUxZEtlV1JZY0hKUFYzQnJaVzVzTlZSc1FtbFRNRVl4VjFoR2Rsb3hXbFZrVlZJeFltdG9RMkpWT1dGVlZWWkpXV3BDZUZSV1NrNVpNbFkwWTJ4R2ExUXdhRFpXYXpGdVdWWktUbVJyVG5wWmFrWTJWMnN4UmsxSFVtcGhWVGx3Vkd0d01WRXdOVWRrVjFaWVkwaENVVkZyWkRCV1JscFRUa1ZzVUdORVRucGhha3BYWkZWc1FsVkZPVkpXYTFaRFpFaG9hV1Z1U210U1IxSlpaVlZPTlZveFZtMWlTRTVLWVcxS1dWRXpUblZaVlRsb1dXMXdNR0Z0YUhwVE1EbFNUMWhhU1ZSSVdtRlhWM0F4VjJ0R1dsUlljRlJpUlVaWVdWZG9VMU5HV2pCU2JWcDNWVWN4VTFac1VYbFRibXQ2VWpOa2ExSldjREZqYTJoNVkwVk9NVkY2UW1Ga2JXYzBVekJ3VmxKSFNrSk9SRUUwWWxkT1JGTnJXazVVUlRrMFVsWkNWbU5yTVVaV1NHaHZaRlpzZUU1dVRYaFVSVVl3VWpCU05WVXpRa3RWVmxKU1drYzVWMXBIWnpGTk1WVTFUV3QwUzJGSWEzSkxNMXBMVDBkc2VXVkViRmRTYm1oMFlsWldWRkpIUmxoU1Iwa3hVbms1VEdFemJFbFdSelZGVld4YVVGUnVXazlqYmtaWFZFVldlbUZGYUZSVWJYQnRUREkxYkZOVlp6VlJhekZyVXpGc2JVMHdNV0ZWUmtrelkwVnZNMk5HVG5CUmJFSk1UVmhvUkdWRWFIWk5VM1JYVkdsMFdrNXRSalJUTW1SYVpHeFpNVmRVVG1sbGFrWkxVakJTY21SNmJIZFVWVzh3VWpBNWNHSldjRlZaYW1oV1lqTldNVlI2Vm01VlIyc3pZVWhvZVU5WE5WZFdSM2hFVGtoYVFsWkZVbTFTUmtaUFRWZHNZVlJGZUU5aGVrbzFWMWN4YW1WRlZuRmhSMDVZWlZkV2RXSldhRFZqVkVKNlRIbDBkV051VGxaaWEyczBaRWh3YzFwWFdYWk9WWFI1WWxVd2RtVnFaM1pPUjJSb1YyMWtSV1ZFUW5WU2VrbDRVVlJGZW1GclRuTk9hMHA1VXpKNE0xZEhiM2xOUnpCM1pGUldlR0pwZEdsYVNHaHhWRmhLZEZFelJsbFViazE1VDBoc05sbFhSa3ROYTBwRVZGaE9hMkpyVm01VWJuQlJVWHBHTVUweFpITlBWVnBzV21zMU0xVXlSakZpZWxwcFZETkdhMDFHWXpST2JGWjRUMGhXY0ZGdFRraFdWMnhvVkc1SmVGcDZTbkpsYkVsNVRsUm9XRlF4U2xsbFV6bHZWMWhrZFZSdE5WRldSMUl5VlcxV01sWnNZM2xSYTJNMVdsVldSR0pYTVRCamVtUnBUbTEwYldWSGR6Tk9hVGgyVGpOT2IySlZUWHBoTUVZelZWVkthRmw2YkROV2EwcHVUREpLZWxwWE5VZGlXR3hTVGxoU01XTlRPRFZTVkVZMVVWYzRNR0p1U25WWFIxb3daRVJyTWxkR1VqQmhXRVpoVGxSTmVtUnRWakJTVkVvMlRrUk9UVTlHY0UxUmEzaEZUMWhhZUdKcVVsaGhSRmw1VTFkNGVXUXdXbTFrYmtKU1kxUk9VVlZzY0hKV2FteEhUVE5XZEU0eU5XaFZWRUkxWlcwMVdWUllTbTFhVlZKc1pGaE9lbEpyT1RGV1NFNXZZMjVHYWxaWFNsZFZNazVhWVcxd1lVMXNXbTVVZVRsd1N6RlNXRTFIVG5abFJuQnZUVVJPTTFwR2NISlNNbEV5VkRJeE5sZEZPVmhQUjNCb1ZURktjVk5WVGxWak1uQlBWVlpTVkU5V1NrOWlWRmx5VmxoYVJHUklTVFZQUmtad1RqQXhSMUZYU21oV1IyUk1UbGRPU0dKSFdqQlVhM0I1WVhwQ01XVkdTbmxPUlhCaFZHbDBkR1Z1Y0RWU01GazBXWHBaTTJFd2J6QmtiV2d3Vmtaa1VrOVdRbEJhZW1oM1pGaHdVVTFVUWxWYU1GWnNWWHBDYWsxRVRscFZTRVY1VVZkS1NHSnJXa3haYTBVeldWVjBSMVpITlhOTlYyeEhaVlYwVG1WWFJsRlJhazVJVWtaT2VGWXpjRzlsV0VGNFRWZGtjVmRyV2pGWGJVNVlXVlp3VkdGVVNraGtTRmt3WVdwa01sa3lVblZpYlRneFZsUlNRMUl4Wkc5U1dGWllWVlZzV2xGcmNFWlJWMDVoVkVka2FGVnJhRmhYVlVaVVpXNW9SVlJIWjNaUmJGSldWRVpvTkZsWGNHbFNSV3N5WW1wc1JVc3diR3hsU0VreFYxZHNWMVF6V1hKaFJYQjFXa1JrTWxKV1FsQlhSMGw1VVZoS01rMVdaRFpNZVRsVVpFYzBNMkZHYUd0a2JGWkdZV3BhY21WdWNGQlNNMVpaWkdsMGQweDZaRFJQUlhRMFltMXJjbU5HYjNwYWJXOXlVMnBHVWxKV1NsQmtSM2h0WVhwU1MyTlhVbXBXZWtaeFVrVXhiRlpFVW5GU01GSnFZVlZTTldWSFVqTlJWekZKVlVaYVYxRnRXa3RoUjNoWFlsZDBSbEpyZEZKVVJGWlZVMnRrZFdWRlpHNWFWbVJWVjFodmVGZHVaekJXVlhnelVUSk9XV1JxVWxKUVZEQnBURU5LYTFsWVVtaGhNbFkxU1dwdmFWRldSa1pSYTBaSllVaGtkRTFHYkdoVFZrNUxXbFpLTUZOdE1ERmlha1pJVG01V2VGcFhWbkpYU0ZaMlYwWm9VVnBVVmxaU2JVNXNUMVpLZUU5RE9IaE9TR1JDVVZWR1NVNUlaRzFSVm14TFV6STVZVk5YYURKWk1EVkNWVmRPU0dJd1l6UmtNa3BTVTFWS1FsSkZTblpSYldSeVkxZG9jbUZWWXpWa2VrSkRVVzVrUm1Rd2FHNVhWWEJhVTFad1NsRldaRlpTUlVwQ1VsaFdUbEZyVmtaU1JVNVVWa1U1V0ZwRVZtaFdWemxIVTNwWmNsUkhTak5UVlVwR1UxVkZNMlJyVWxsVmJrSXlVakJzTWxWNlFsUlNWV2N4VTFoVk5GTXdlRTFhUkZKNFpFVmtUMkZJWnpOVVJURjJWRmhyTTFwWFNqUmhSRVpDU3pCa1JtUXdWazFpYm14dllUTnNVbFZZVFRGTlYyaFNWMFpzU0ZadVRqRmhNMW96VFVoS1RXUkhSbHBXUkU1eFZWUXdhVXhEU2pKYVdFcDZZVmM1ZFVscWIybE5hVWx6U1c1U05XTkhWV2xQYVVwRlVWWlNRbGd3ZEVaWFUwbHpTVzFXTkdOSGJIbFpXRkp3WWpJMGFVOXFSVE5OYWtsNVQwUkZlVTlVUWprPSIKCQl9Cgl9Cn0=
type: kubernetes.io/dockerconfigjson

---
apiVersion: v1
kind: Secret
metadata:
  name: springappsecrets
type: Opaque
stringData:   # We can define multiple key value pairs.
  password: devdb@123

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-hostpath
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
  - ReadWriteOnce
  hostPath:
    path: "/tmp/mongodata"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-hostpath
spec:
  storageClassName: manual
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---
## Spring Boot App
apiVersion: apps/v1
kind: Deployment
metadata:
  name: springappdeployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: springapp
  template:
    metadata:
      name: springapppod
      labels:
        app: springapp
    spec:
      containers:
      - name: springappcontainer
        image: 637423365063.dkr.ecr.us-east-1.amazonaws.com/java-spring-boot:latest-39
        ports:
        - containerPort: 8080
        env:
        - name: MONGO_DB_USERNAME
          valueFrom:
            configMapKeyRef:
              name: springappconfigmap
              key: username
        - name: MONGO_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: springappsecrets
              key: password
        - name: MONGO_DB_HOSTNAME
          value: mongo
      imagePullSecrets:
      - name: aws-ecr-credentials    
---
apiVersion: v1
kind: Service
metadata:
  name: springapp
spec:
  selector:
    app: springapp
  ports:
  - port: 80
    targetPort: 8080
  type: NodePort
---
# Mongo db pod with volumes(HostPath)
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: mongodbrs
spec:
  selector:
    matchLabels:
      app: mongodb
  template:
     metadata:
       name: mongodbpod
       labels:
         app: mongodb
     spec:
       volumes:
       - name: mongodb-pvc
         persistentVolumeClaim:
           claimName: pvc-hostpath
       containers:
       - name: mongodbcontainer
         image: mongo
         ports:
         - containerPort: 27017
         env:
         - name: MONGO_INITDB_ROOT_USERNAME
           valueFrom:
             configMapKeyRef:
               name: springappconfigmap
               key: username
         - name: MONGO_INITDB_ROOT_PASSWORD
           valueFrom:
             secretKeyRef:
               name: springappsecrets
               key: password
         volumeMounts:
         - name: mongodb-pvc
           mountPath: /data/db
---
apiVersion: v1
kind: Service
metadata:
  name: mongo
spec:
  type: ClusterIP
  selector:
    app: mongodb
  ports:
  - port: 27017
    targetPort: 27017
